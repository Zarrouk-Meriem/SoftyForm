import { readFile, writeFile, mkdir } from 'node:fs/promises';
import { dirname } from 'node:path';
import { appConfig } from '../../config/app.js';
/**
 * Get cache file
 */
function getCacheFile() {
    return appConfig.cacheRootDir + '/versions.json';
}
/**
 * Get data
 */
async function getStoredData() {
    try {
        return JSON.parse(await readFile(getCacheFile(), 'utf8'));
    }
    catch {
        return {};
    }
}
/**
 * Get version
 */
export async function getDownloaderVersion(key, type) {
    const data = await getStoredData();
    const value = data[key];
    if (value && value.downloadType === type) {
        return value;
    }
    return null;
}
/**
 * Store downloader version in cache
 */
export async function saveDownloaderVersion(key, value) {
    const filename = getCacheFile();
    // Create directory for cache, if missing
    const dir = dirname(filename);
    try {
        await mkdir(dir, {
            recursive: true,
        });
    }
    catch {
        //
    }
    // Update data
    const data = await getStoredData();
    data[key] = value;
    // Store file
    await writeFile(filename, JSON.stringify(data, null, '\t'), 'utf8');
}
