import type { IconifyInfo } from '@iconify/types';
/**
 * Icon style
 */
export type IconStyle = 'fill' | 'stroke';
/**
 * Extra props added to icons
 */
export interface ExtraIconSetIconNamesProps {
    _is?: IconStyle;
    _l?: number;
}
/**
 * Icon. First entry is main name, other entries are aliases
 */
export type IconSetIconNames = [string, ...string[]] & ExtraIconSetIconNamesProps;
/**
 * Tag
 */
export interface IconSetIconsListTag {
    title: string;
    icons: IconSetIconNames[];
}
/**
 * Icons
 */
export interface IconSetIconsListIcons {
    total: number;
    visible: Record<string, IconSetIconNames>;
    hidden: Record<string, IconSetIconNames>;
    failed: Set<string>;
    tags?: IconSetIconsListTag[];
    uncategorised?: IconSetIconNames[];
    chars?: Record<string, IconSetIconNames>;
    keywords?: Record<string, Set<IconSetIconNames>>;
    iconStyle?: IconStyle | 'mixed';
}
/**
 * Prepared icons list for API v2 response
 */
export interface IconSetAPIv2IconsList {
    prefix: string;
    total: number;
    title?: string;
    info?: IconifyInfo;
    uncategorized?: string[];
    categories?: Record<string, string[]>;
    hidden?: string[];
    aliases?: Record<string, string>;
    chars?: Record<string, string>;
}
/**
 * Extra data generated for each icon set
 */
export interface IconSetExtraData {
    v2list: IconSetAPIv2IconsList;
}
