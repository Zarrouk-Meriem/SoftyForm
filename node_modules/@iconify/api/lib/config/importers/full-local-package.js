import { createRequire } from 'node:module';
import { dirname } from 'node:path';
import { createIconSetsPackageImporter } from '../../importers/full/json.js';
import { DirectoryDownloader } from '../../downloaders/directory.js';
import { RemoteDownloader } from '../../downloaders/remote.js';
/**
 * Create importer for package
 */
export function createPackageIconSetImporter(packageName = '@iconify/json', useRemoteFallback = false, autoUpdateRemotePackage = false) {
    // Try to locate package
    let dir;
    try {
        const req = createRequire(import.meta.url);
        const filename = req.resolve(`${packageName}/package.json`);
        dir = filename ? dirname(filename) : undefined;
    }
    catch (err) {
        //
    }
    if (dir) {
        return createIconSetsPackageImporter(new DirectoryDownloader(dir), {});
    }
    if (!useRemoteFallback) {
        throw new Error(`Cannot find package "${packageName}"`);
    }
    // Try to download it, update if
    const npm = {
        downloadType: 'npm',
        package: packageName,
    };
    return createIconSetsPackageImporter(new RemoteDownloader(npm, autoUpdateRemotePackage));
}
