import { DirectoryDownloader } from '../downloaders/directory.js';
import { createJSONDirectoryImporter } from '../importers/full/directory-json.js';
import { directoryExists } from '../misc/files.js';
import { fullPackageImporter } from './importers/full-package.js';
import { splitPackagesImporter } from './importers/split-packages.js';
/**
 * Sources
 *
 * Change this function to configure sources for your API instance
 */
export async function getImporters() {
    // Result
    const importers = [];
    const iconifyIconSets = (process.env['ICONIFY_SOURCE'] || 'full');
    switch (iconifyIconSets) {
        case 'full':
            importers.push(fullPackageImporter);
            break;
        case 'split':
            importers.push(splitPackagesImporter);
            break;
    }
    /**
     * Add custom icons from `icons` directory
     */
    if (await directoryExists('icons')) {
        importers.push(createJSONDirectoryImporter(new DirectoryDownloader('icons'), {
            // Skip icon sets with mismatched prefix
            ignoreInvalidPrefix: false,
            // Filter icon sets. Returns true if icon set should be included, false if not.
            filter: (prefix) => {
                return true;
            },
        }));
    }
    return importers;
}
