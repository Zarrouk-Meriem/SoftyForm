/**
 * Themes to copy
 */
export const themeKeys = ['prefixes', 'suffixes'];
/**
 * Hardcoded list of themes
 *
 * Should contain only simple items, without '-'
 */
const hardcodedThemes = new Set([
    'baseline',
    'outline',
    'round',
    'sharp',
    'twotone',
    'thin',
    'light',
    'bold',
    'fill',
    'duotone',
    'linear',
    'line',
    'solid',
    'filled',
    'outlined',
]);
/**
 * Find icon
 */
export function findIconSetThemes(iconSet) {
    const results = new Set();
    // Add prefixes / suffixes from themes
    themeKeys.forEach((key) => {
        const items = iconSet[key];
        if (items) {
            Object.keys(items).forEach((item) => {
                if (item) {
                    results.add(item);
                }
            });
        }
    });
    // Check all icons and aliases
    const names = Object.keys(iconSet.icons).concat(Object.keys(iconSet.aliases || {}));
    for (let i = 0; i < names.length; i++) {
        const name = names[i];
        const parts = name.split('-');
        if (parts.length > 1) {
            const firstChunk = parts.shift();
            const lastChunk = parts.pop();
            if (hardcodedThemes.has(firstChunk)) {
                results.add(firstChunk);
            }
            if (hardcodedThemes.has(lastChunk)) {
                results.add(lastChunk);
            }
        }
    }
    // Return as array, sorted by length
    return Array.from(results).sort((a, b) => b.length - a.length);
}
